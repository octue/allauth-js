name: release

on:
  push:
    branches:
      - main

permissions:
  contents: read # for checkout

jobs:
  release:
    name: Release

    runs-on: ubuntu-latest

    permissions:
      contents: write # to be able to publish a GitHub release
      issues: write # to be able to comment on released issues
      pull-requests: write # to be able to comment on released pull requests
      id-token: write # to enable use of OIDC for npm provenance

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "lts/*"

      - name: Setup dependency cache
        uses: actions/cache@v4
        with:
          path: node_modules
          key: node-modules-${{ hashFiles('yarn.lock') }}
          # restore-keys acts as a fallback to restore from any cache
          # that starts with node-modules- if an exact match isnâ€™t found.
          restore-keys: |
            node-modules-

      - name: Install dependencies
        run: |
          yarn --version || corepack enable
          yarn install --frozen-lockfile

      - name: Semantic release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        run: npx semantic-release
